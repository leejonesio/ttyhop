name: CI

on:
  push:
    branches: [main]
    tags:
      - "v*.*.*" # Run workflow on version tags.
  pull_request:
    branches: [main]

jobs:
  build_and_lint:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -v ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: version of golangci-lint to use in form of v1.2.3, v1.2, or `latest` to use the latest version
          version: latest

  release:
    # This job only runs when a tag is pushed, and depends on the build_and_lint job.
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build_and_lint
    runs-on: macos-latest
    permissions:
      contents: write # Required to create a GitHub release.
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build release binary
        run: make install LATEST_TAG=${{ github.ref_name }} NEXT_VERSION=${{ github.ref_name }} PREFIX=.
      
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --generate-notes \
            --title "${{ github.ref_name }}" \
            ./ttyhop